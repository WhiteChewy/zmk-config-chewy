#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

&soft_off { hold-time-ms = <3000>; };

&mt {
    flavor = "balanced";
    require-prior-idle-ms = <200>;
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Auto Shift";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            require-prior-idle-ms = <125>;
        };

        ca: ctrl_alt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LCTRL>, <&kp LALT>;
        };

        cb: ctrl_backspase {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_BACKSPASE";
            bindings = <&kp BACKSPACE>, <&mo 7>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F      &kp G        &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo LOWER  &kp SPACE    &kp RET  &mo RAISE  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB    &kp N1     &kp N2     &kp N3    &kp N4    &kp N5       &kp N6          &kp N7      &kp N8        &kp N9     &kp N0     &kp BSPC
&kp LCTRL  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp LEFT_ARROW  &kp DOWN    &kp UP_ARROW  &kp RIGHT  &kp RPAR   &kp PIPE
&kp LSHFT  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC     &kp LBKT        &kp RBKT    &kp GRAVE     &kp BSLH   &kp TILDE  &kp ESC
                                 &kp LGUI  &trans    &kp SPACE    &kp RET         &mo ADJUST  &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT   &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR           &kp RPAR       &kp BSPC
&kp LCTRL  &kp F11   &kp F12  &kp HOME  &kp END     &kp PG_UP      &kp MINUS  &kp EQUAL  &kp LBKT  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp GRAVE
&kp LSHFT  &none     &none    &none     &none       &kp PG_DN      &kp UNDER  &kp PLUS   &kp LBRC  &kp RIGHT_BRACE    &kp PIPE       &kp TILDE
                              &kp LGUI  &mo ADJUST  &kp SPACE      &kp RET    &trans     &kp RALT
            >;
        };

        adjust_layer {
            bindings = <
&kt TAB    &kp F1   &kp F2   &kp F3          &kp F4  &kp F5       &kp F6   &kp F7  &kp F8    &kp F9  &kp F10  &none
&kp CLCK   &kp F11  &kp F12  &kp KP_NUMLOCK  &none   &none        &none    &none   &none     &none   &none    &none
&kp LSHFT  &none    &none    &none           &none   &none        &none    &none   &none     &none   &none    &bootloader
                             &kp LGUI        &trans  &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        auto_mouse {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans               &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &kp K_SCROLL_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &mo 5      &kp K_SCROLL_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans     &trans     &trans               &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
